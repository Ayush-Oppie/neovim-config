{
  "Import React": {
    "prefix": "imr",
    "body": ["import * as React from 'react';"],
    "description": "Import React"
  },
  "Import React, Component": {
    "prefix": "imrc",
    "body": [
      "import * as React from 'react';",
      "import { Component } from 'react';"
    ],
    "description": "Import React, Component"
  },
  "Import ReactDOM": {
    "prefix": "imrd",
    "body": ["import ReactDOM from 'react-dom';"],
    "description": "Import ReactDOM"
  },
  "Import React, useState": {
    "prefix": "imrs",
    "body": [
      "import * as React from 'react';",
      "import { useState } from 'react';"
    ],
    "description": "Import React, useState"
  },
  "Import React, useState, useEffect": {
    "prefix": "imrse",
    "body": [
      "import * as React from 'react';",
      "import { useState, useEffect } from 'react';"
    ],
    "description": "Import React, useState, useEffect"
  },
  "Import PropTypes": {
    "prefix": "impt",
    "body": ["import PropTypes from 'prop-types';"],
    "description": "Import PropTypes"
  },
  "Import PureComponent": {
    "prefix": "impc",
    "body": [
      "import * as React from 'react';",
      "import { PureComponent } from 'react';"
    ],
    "description": "Import PureComponent"
  },
  "Class Component": {
    "prefix": "cc",
    "body": [
      "class ${1:ComponentName} extends React.Component {",
      "  render() {",
      "    return <div>${2}</div>;",
      "  }",
      "}",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Class Component"
  },
  "Class Component With Constructor": {
    "prefix": "ccc",
    "body": [
      "class ${1:ComponentName} extends Component {",
      "  constructor(props) {",
      "    super(props);",
      "    this.state = { ${2:state}: ${3:value} };",
      "  }",
      "  render() {",
      "    return (${4});",
      "  }",
      "}",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Class Component With Constructor"
  },
  "Class Pure Component": {
    "prefix": "cpc",
    "body": [
      "class ${1:ComponentName} extends PureComponent {",
      "  state = { ${2:state}: ${3:value} };",
      "  render() {",
      "    return (${4});",
      "  }",
      "}",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Class Pure Component"
  },
  "Function Component": {
    "prefix": "ffc",
    "body": [
      "function ${1:ComponentName}(${2:props}) {",
      "  return (${3});",
      "}",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Function Component"
  },
  "Stateless Function Component (Arrow function)": {
    "prefix": "sfc",
    "body": [
      "const ${1:ComponentName} = (${2:props}) => {",
      "  return (${3});",
      "};",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Stateless Function Component (Arrow function)"
  },
  "componentDidMount": {
    "prefix": "cdm",
    "body": ["componentDidMount() {", "  ${1}", "}"],
    "description": "componentDidMount"
  },
  "useEffect Hook": {
    "prefix": "uef",
    "body": ["useEffect(() => {", "  ${1}", "}, []);"],
    "description": "useEffect Hook"
  },
  "useCallback Hook": {
    "prefix": "ucb",
    "body": ["useCallback((val) => {", "  ${1}", "}, []);"],
    "description": "useCallback Hook"
  },
  "componentWillUnmount": {
    "prefix": "cwun",
    "body": ["componentWillUnmount() {", "  ${1}", "}"],
    "description": "componentWillUnmount"
  },
  "setState": {
    "prefix": "ss",
    "body": ["this.setState({ ${1:key}: ${2:value} });"],
    "description": "setState"
  },
  "Functional setState": {
    "prefix": "ssf",
    "body": [
      "this.setState((prevState) => {",
      "  return { ${1:key}: prevState.${2:prevValue} };",
      "});"
    ],
    "description": "Functional setState"
  },
  "render": {
    "prefix": "ren",
    "body": ["render() {", "  return (${1});", "}"],
    "description": "render"
  },
  "getDerivedStateFromProps": {
    "prefix": "gds",
    "body": [
      "static getDerivedStateFromProps(nextProps, prevState) {",
      "  ${1}",
      "}"
    ],
    "description": "getDerivedStateFromProps"
  },
  "getSnapshotBeforeUpdate": {
    "prefix": "gsbu",
    "body": ["getSnapshotBeforeUpdate(prevProps, prevState) {", "  ${1}", "}"],
    "description": "getSnapshotBeforeUpdate"
  }
}
